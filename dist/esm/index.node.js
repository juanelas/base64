function encode(input, urlsafe = false, padding = true) {
    let base64 = '';
    {
        const bytes = (typeof input === 'string')
            ? Buffer.from(input, 'utf8')
            : Buffer.from(input);
        base64 = bytes.toString('base64');
    }
    if (urlsafe)
        base64 = base64ToBase64url(base64);
    if (!padding)
        base64 = removeBase64Padding(base64);
    return base64;
}
function decode(base64, stringOutput = false) {
    {
        const buffer = Buffer.from(base64, 'base64');
        return stringOutput
            ? buffer.toString('utf8')
            : new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.length);
    }
}
function base64ToBase64url(base64) {
    return base64.replace(/\+/g, '-').replace(/\//g, '_');
}
function removeBase64Padding(str) {
    return str.replace(/=/g, '');
}

export { decode, encode };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXgubm9kZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3RzL2luZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQmFzZTY0dXJsIGZvciBib3RoIG5vZGUuanMgYW5kIGJyd3NlciBqYXZhc2NyaXB0LiBJdCBjYW4gd29yayB3aXRoIEFycmF5QnVmZmVyfFR5cGVkQXJyYXl8QnVmZmVyXG4gKlxuICogQHJlbWFya3MgQm93c2VyIGNvZGUgb2J0YWluZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vcGFudmEvam9zZS9ibG9iL21haW4vc3JjL3J1bnRpbWUvYnJvd3Nlci9iYXNlNjR1cmwudHNcbiAqIEBwYWNrYWdlRG9jdW1lbnRhdGlvblxuICovXG5cbmltcG9ydCB7IGJhc2U2NEVuY29kZSwgYmFzZTY0RGVjb2RlIH0gZnJvbSAnLi9icm93c2VyLWJhc2U2NC5qcydcblxuLyoqXG4gKiBBIFR5cGVkQXJyYXkgb2JqZWN0IGRlc2NyaWJlcyBhbiBhcnJheS1saWtlIHZpZXcgb2YgYW4gdW5kZXJseWluZyBiaW5hcnkgZGF0YSBidWZmZXIuXG4gKi9cbmV4cG9ydCB0eXBlIFR5cGVkQXJyYXkgPSBJbnQ4QXJyYXkgfCBVaW50OEFycmF5IHwgVWludDhDbGFtcGVkQXJyYXkgfCBJbnQxNkFycmF5IHwgVWludDE2QXJyYXkgfCBJbnQzMkFycmF5IHwgVWludDMyQXJyYXkgfCBGbG9hdDMyQXJyYXkgfCBGbG9hdDY0QXJyYXkgfCBCaWdJbnQ2NEFycmF5IHwgQmlnVWludDY0QXJyYXlcblxuLyoqXG4gKiBCYXNlNjRVcmwgZW5jb2Rpbmcgb2YgYSBidWZmZXIgaW5wdXQgb3IgYSBzdHJpbmcgKFVURjE2IGluIGJyb3dzZXJzLCBVVEY4IGluIG5vZGUpXG4gKiBAcGFyYW0gaW5wdXRcbiAqIEBwYXJhbSB1cmxzYWZlIC0gaWYgdHJ1ZSBCYXNlNjQgVVJMIGVuY29kaW5nIGlzIHVzZWQgKCcrJyBhbmQgJy8nIGFyZSByZXBsYWNlZCBieSAnLScsICdfJylcbiAqIEBwYXJhbSBwYWRkaW5nIC0gaWYgZmFsc2UsIHBhZGRpbmcgKHRyYWlsaW5nICc9JykgaXMgcmVtb3ZlZFxuICogQHJldHVybnMgYSBzdHJpbmcgd2l0aCB0aGUgYmFzZTY0LWVuY29kZWQgcmVwcmVzZW50YXRpb24gb2YgdGhlIGlucHV0XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGUgKGlucHV0OiBBcnJheUJ1ZmZlckxpa2UgfCBUeXBlZEFycmF5IHwgQnVmZmVyIHwgc3RyaW5nLCB1cmxzYWZlOiBib29sZWFuID0gZmFsc2UsIHBhZGRpbmc6IGJvb2xlYW4gPSB0cnVlKTogc3RyaW5nIHtcbiAgbGV0IGJhc2U2NCA9ICcnXG4gIGlmIChJU19CUk9XU0VSKSB7XG4gICAgY29uc3QgYnl0ZXMgPSAodHlwZW9mIGlucHV0ID09PSAnc3RyaW5nJylcbiAgICAgID8gKG5ldyBUZXh0RW5jb2RlcigpKS5lbmNvZGUoaW5wdXQpXG4gICAgICA6IG5ldyBVaW50OEFycmF5KGlucHV0KVxuICAgIGJhc2U2NCA9IGJhc2U2NEVuY29kZShieXRlcylcbiAgfSBlbHNlIHtcbiAgICBjb25zdCBieXRlcyA9ICh0eXBlb2YgaW5wdXQgPT09ICdzdHJpbmcnKVxuICAgICAgPyBCdWZmZXIuZnJvbShpbnB1dCwgJ3V0ZjgnKVxuICAgICAgOiBCdWZmZXIuZnJvbShpbnB1dClcbiAgICBiYXNlNjQgPSBieXRlcy50b1N0cmluZygnYmFzZTY0JylcbiAgfVxuICBpZiAodXJsc2FmZSkgYmFzZTY0ID0gYmFzZTY0VG9CYXNlNjR1cmwoYmFzZTY0KVxuICBpZiAoIXBhZGRpbmcpIGJhc2U2NCA9IHJlbW92ZUJhc2U2NFBhZGRpbmcoYmFzZTY0KVxuICByZXR1cm4gYmFzZTY0XG59XG5cbi8qKlxuICogQmFzZTY0dXJsIGRlY29kaW5nIChiaW5hcnkgb3V0cHV0KSBvZiBiYXNlNjR1cmwtZW5jb2RlZCBzdHJpbmdcbiAqIEBwYXJhbSBiYXNlNjQgLSBhIGJhc2U2NCBzdHJpbmdcbiAqIEBwYXJhbSBzdHJpbmdPdXRwdXQgLSBpZiB0cnVlIGEgVVRGMTYgKGJyb3dzZXIpIG9yIFVURjggKG5vZGUpIHN0cmluZyBpcyByZXR1cm5lZFxuICogQHJldHVybnMgYSBidWZmZXIgb3IgdW5pY29kZSBzdHJpbmdcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZSAoYmFzZTY0OiBzdHJpbmcpOiBVaW50OEFycmF5XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlIChiYXNlNjQ6IHN0cmluZywgc3RyaW5nT3V0cHV0OiB1bmRlZmluZWQpOiBVaW50OEFycmF5XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlIChiYXNlNjQ6IHN0cmluZywgc3RyaW5nT3V0cHV0OiBmYWxzZSk6IFVpbnQ4QXJyYXlcbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGUgKGJhc2U2NDogc3RyaW5nLCBzdHJpbmdPdXRwdXQ6IHRydWUpOiBzdHJpbmdcbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGUgKGJhc2U2NDogc3RyaW5nLCBzdHJpbmdPdXRwdXQ6IGJvb2xlYW4pOiBVaW50OEFycmF5IHwgc3RyaW5nXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlIChiYXNlNjQ6IHN0cmluZywgc3RyaW5nT3V0cHV0OiB1bmRlZmluZWQgfCBib29sZWFuID0gZmFsc2UpOiBVaW50OEFycmF5IHwgc3RyaW5nIHtcbiAgaWYgKElTX0JST1dTRVIpIHtcbiAgICBsZXQgdXJsc2FmZSA9IGZhbHNlXG4gICAgaWYgKC9eWzAtOWEtekEtWl8tXSs9ezAsMn0kLy50ZXN0KGJhc2U2NCkpIHtcbiAgICAgIHVybHNhZmUgPSB0cnVlXG4gICAgfSBlbHNlIGlmICghL15bMC05YS16QS1aKy9dKj17MCwyfSQvLnRlc3QoYmFzZTY0KSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdOb3QgYSB2YWxpZCBiYXNlNjQgaW5wdXQnKVxuICAgIH1cbiAgICBpZiAodXJsc2FmZSkgYmFzZTY0ID0gYmFzZTY0dXJsVG9CYXNlNjQoYmFzZTY0KVxuICAgIGNvbnN0IGJ5dGVzID0gYmFzZTY0RGVjb2RlKGJhc2U2NClcbiAgICByZXR1cm4gc3RyaW5nT3V0cHV0XG4gICAgICA/IChuZXcgVGV4dERlY29kZXIoKSkuZGVjb2RlKGJ5dGVzKVxuICAgICAgOiBieXRlc1xuICB9IGVsc2Uge1xuICAgIGNvbnN0IGJ1ZmZlciA9IEJ1ZmZlci5mcm9tKGJhc2U2NCwgJ2Jhc2U2NCcpXG4gICAgcmV0dXJuIHN0cmluZ091dHB1dFxuICAgICAgPyBidWZmZXIudG9TdHJpbmcoJ3V0ZjgnKVxuICAgICAgOiBuZXcgVWludDhBcnJheShidWZmZXIuYnVmZmVyLCBidWZmZXIuYnl0ZU9mZnNldCwgYnVmZmVyLmxlbmd0aClcbiAgfVxufVxuXG5mdW5jdGlvbiBiYXNlNjRUb0Jhc2U2NHVybCAoYmFzZTY0OiBzdHJpbmcpOiBzdHJpbmcge1xuICByZXR1cm4gYmFzZTY0LnJlcGxhY2UoL1xcKy9nLCAnLScpLnJlcGxhY2UoL1xcLy9nLCAnXycpXG59XG5cbmZ1bmN0aW9uIGJhc2U2NHVybFRvQmFzZTY0IChiYXNlNjR1cmw6IHN0cmluZyk6IHN0cmluZyB7XG4gIHJldHVybiBiYXNlNjR1cmwucmVwbGFjZSgvLS9nLCAnKycpLnJlcGxhY2UoL18vZywgJy8nKS5yZXBsYWNlKC89L2csICcnKVxufVxuXG5mdW5jdGlvbiByZW1vdmVCYXNlNjRQYWRkaW5nIChzdHI6IHN0cmluZyk6IHN0cmluZyB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvPS9nLCAnJylcbn1cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxQk0sU0FBVSxNQUFNLENBQUUsS0FBcUQsRUFBRSxPQUFtQixHQUFBLEtBQUssRUFBRSxPQUFBLEdBQW1CLElBQUksRUFBQTtJQUM5SCxJQUFJLE1BQU0sR0FBRyxFQUFFLENBQUE7QUFDZixJQUtPO0FBQ0wsUUFBQSxNQUFNLEtBQUssR0FBRyxDQUFDLE9BQU8sS0FBSyxLQUFLLFFBQVE7Y0FDcEMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDO0FBQzVCLGNBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQTtBQUN0QixRQUFBLE1BQU0sR0FBRyxLQUFLLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFBO0FBQ2xDLEtBQUE7QUFDRCxJQUFBLElBQUksT0FBTztBQUFFLFFBQUEsTUFBTSxHQUFHLGlCQUFpQixDQUFDLE1BQU0sQ0FBQyxDQUFBO0FBQy9DLElBQUEsSUFBSSxDQUFDLE9BQU87QUFBRSxRQUFBLE1BQU0sR0FBRyxtQkFBbUIsQ0FBQyxNQUFNLENBQUMsQ0FBQTtBQUNsRCxJQUFBLE9BQU8sTUFBTSxDQUFBO0FBQ2YsQ0FBQztTQWFlLE1BQU0sQ0FBRSxNQUFjLEVBQUUsZUFBb0MsS0FBSyxFQUFBO0FBQy9FLElBWU87UUFDTCxNQUFNLE1BQU0sR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQTtBQUM1QyxRQUFBLE9BQU8sWUFBWTtBQUNqQixjQUFFLE1BQU0sQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDO0FBQ3pCLGNBQUUsSUFBSSxVQUFVLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsVUFBVSxFQUFFLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQTtBQUNwRSxLQUFBO0FBQ0gsQ0FBQztBQUVELFNBQVMsaUJBQWlCLENBQUUsTUFBYyxFQUFBO0FBQ3hDLElBQUEsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxDQUFBO0FBQ3ZELENBQUM7QUFNRCxTQUFTLG1CQUFtQixDQUFFLEdBQVcsRUFBQTtJQUN2QyxPQUFPLEdBQUcsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFBO0FBQzlCOzs7OyJ9
